c
n
params
c
    c
current_user
c
params
c
current_user
c
params
c
params
c
params
c
params.headers
params.hearders
params
c
params
c
session
@current_user ||= User.find(session[:user_id]) if session[:user_id]
params
current_user
c
params
c
template_params
c
params
c
params
c
template_params
params
c
params
c
@template
params
c
params
c
params
c
params
c
params
c
n
params
c
params
c
params[:Authorization]
params
params.Authorization
c
params
c
params
parmas
c
jwt_payload = JWT.decode(request.headers['Authorization'].split('')[1], Rails.application.credentials.fetch(:secret_key_base)).first
params
c
params
c
params
c
params
c
_opts
resource
c
params
c
resource
c
@token
c
resource.persisted?
resource
c
_opts
resource
params
c
params
c
params
