c
n
c
n
c
n
c
n
c
n
c
n
c
n
c
n
c
n
c
n
c
login_token
n
c
n
c
@user.tokens
@user.create_new_auth_token
DeviseTokenAuth.headers_names[:'access-token']
request.headers
request.headers["access-token"]
DeviseTokenAuth
DeviseTokenAuth.headers_names
DeviseTokenAuth.headers_names[:'access-token']
session["warden.user.user.key"]
session
sign_in(@user)
n
c
n
c
@user.create_new_auth_token
n
c
n
c
@user.create_new_auth_token
@user.generate_confirmation_token!
@user.generate_confirmation_token
@user.generate_auth_token
@user.generate_token
@user
n
c
n
c
n
c
n
c
n
c
@user.create_new_auth_token
@user.create_new_token
@user.token
@user.tokens
n
c
n
c
n
c
z
n
c
n
c
n
c
v
c
n
c
n
c
n
c
user
n
c
cc
n
c
n
c
@user.save!
@user
n
c
n
c
n
c
n
c
n
c
x
n
c
n
c
provider_data[:data][:info][:email]
provider_data
provider_data[:info]
c
n
c
provider_data[:data][:provider]
provider_data
provider_params
c
 provider_data[:body]
 provider_data[:body.provider]
 provider_data[:body](provider)
 provider_data[:body].provider
 provider_data[:body][:provider]
 provider_data[:body]
 provider_data.body
 provider_data
 provider_data[:uid]
 provider_data[:provider]
c
params
c
params
c
n
resource.read_attribute_before_type_cast(:role) == 0
resource
c
sign_up_params
n
current_user
c
n
resource.read_attribute_before_type_cast(:role) == 0
c
resource.read_attribute_before_type_cast(:role) == 0
resource.role == 0
resource.role == 1
resource.role
resource
c
n
@destination
@ddestination
n
@endpoint
n
c
v
n
@endpoint
n
c
n
@endpoint
n
c
current_company
c
current_company
c
current_company
c
current_company
c
current_company
c
current_user
c
n
template_params
c
n
template_params
c
template_params
c
params
template_params
c
template_params
c
n
c
template_params.except(:audio)
n
c
template_params
template_parmas
c
params
params.except(:audio)
params
c
n
c
params
params[:audio].delete
params
params.except[:audio]
c
params
c
params
c
user_params << "role"
user_params << role
user_params[:role]
user_params
c
\c
c
user_params
params
c
n
c
n
c
@company
n
params
c
params
n
c
n
'n
params
c
n
c
n
c
package_params[:price].present?
package_params[:price]
params
params[:price].present?
n
c
n
params
